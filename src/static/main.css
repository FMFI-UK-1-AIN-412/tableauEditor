body {
	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

.tableauEditor {
	width: 100%;
}

.tableauEditor * {
	box-sizing: border-box;
}

.tableau {
	width: 100%;
}

.formula {
	display: block;
	border-top: 0.5px solid transparent;
	min-width: 100%;
	width: max-content;
}

.beta {
	min-width: 100%;
}

.formula > .beta {
	display: inline-flex;
}

.beta > .formula {
	display: inline-block;
	min-width: 20px;
	flex-grow: 1;
	border-top: 0.5px solid black;
	border-left: 0.5px solid black;
	padding-left: 2.25px;
}
.beta > .formula:first-child {
	border-left: none;
	padding-left: 0;
	padding-right: 2.25px;
}

.inputGroup {
	display: flex;
	font-size: .75rem;
	align-items: baseline;
	margin-bottom: 0.125em;
	margin-bottom: 0.125rem;
}

.formulaId {
	width: 0.625em;
}

.textInput {
	text-align: center;
	background-color: inherit;
	font-size: .75rem;
	border: 0;
	outline: 0;
	padding-bottom: 1px;
	border-bottom: 1px dashed lightgray;
	border-top-left-radius: 2px;
	border-top-right-radius: 2px;
}

.textInput:focus {
	background-color: rgba(0, 0, 0, 0.05);
	padding-bottom: 0;
	border-bottom: 2px solid #16a;
}
  
.textInput:hover {
	background-color: rgba(0, 0, 0, 0.075);
	border-bottom-style: solid;
}
  
.textInput:active {
	background-color: rgba(0, 0, 0, 0.1);
	border-bottom-style: solid;
}
  
.textInputFormula, .textInputFormulaWithSubst {
	flex-grow: 1;
	/* width: calc(100% - 5rem); */
}

.textInputFormulaWithSubst {
	/* width: calc(100% - 11.25rem); */
}

.textInputSubst, .textInputReference {
	flex: none;
	min-width: 1rem;
}

.expandControls {
	text-align: center;
	margin-bottom: 0.125rem;
}

.actions {
	display: flex;
	justify-content: flex-end;
}

.inputGroup .onclick-menu,
.inputGroup button {
	margin: 0 0.125rem;
}

.actions > button,
.actions > .onclick-menu,
.expandControls > button,
.expandControls > .onclick-menu {
	margin: 0 0.25rem;
}

.actions > button:first-child,
.actions > .onclick-menu:first-child,
.expandControls > button:first-child,
.expandControls > .onclick-menu:first-child,
.inputGroup .onclick-menu:first-child,
.inputGroup button:first-child {
	margin-left: 0;
}

.actions > button:last-child,
.actions > .onclick-menu:last-child,
.expandControls > button:last-child,
.expandControls > .onclick-menu:last-child,
.inputGroup .onclick-menu:last-child,
.inputGroup button:last-child {
	margin-right: 0;
}

.problems {
	max-width: 97%;
}


.button,
.onclick-menu {
	padding: 0.125rem 0.5rem;
	background-color: #fff;
	border-radius: 1.5rem;
	border: thin solid lightgray;
	font-size: .75rem;
}
.button:focus,
.onclick-menu:focus {
	background-color: rgba(0, 0, 0, 0.05);
	border-color: #16a;
}
.button:hover {
	background-color: rgba(0, 0, 0, 0.075);
	border-color: #ccc;
}
.onclick-menu-content button:hover,
.onclick-menu-content button:focus {
	background-color: rgba(0, 0, 0, 0.075);
}
.button.active {
	background-color: rgba(0, 0, 0, 0.1);
	border-color: #bbb;
}
.button:active {
	background-color: rgba(0, 0, 0, 0.1);
	border-color: #16a;
}
.onclick-menu-content button:active {
	color: white;
	background-color: #16a;
}

.closed {
	min-width: 17px;
}

.nodeProblems {
	text-align: center;
	color: hsl(36, 100%, 40%);
	font: small-caption;
	font-weight: bold;
	font-size: .75rem;
}

.nodeProblemsText {
	display: block;
}

/*custom menu component start*/
/* The necessities */
.onclick-menu {
	position: relative;
	display: inline-block;
}

.onclick-menu:focus {
	pointer-events: none;
}

.onclick-menu:focus .onclick-menu-content {
	opacity: 1;
	visibility: visible;
}

.onclick-menu-content {
	pointer-events: auto;
	position: absolute;
	z-index: 1;

	opacity: 0;
	visibility: hidden;
	transition: visibility 0.25s, opacity 0.1s;
	left: -0.5625rem;
}

.onclick-menu.change .onclick-menu-content {
	left: auto;
	right: -0.5625rem;
}

.onclick-menu.no-pointer-events {
	pointer-events: auto !important;
}

.onclick-menu.no-visibility .onclick-menu-content {
	visibility: visible !important;
	display: none;
}

.onclick-menu.no-visibility:focus .onclick-menu-content {
	display: block;
}

.onclick-menu.no-opacity .onclick-menu-content {
	opacity: 1 !important;
}

/*
Eye candy
( colors courtesy of https://kuler.adobe.com/try-color-theme-3350110 )
*/
.onclick-menu {
	outline: 0;
	text-align: left;
}
.onclick-menu-content {
	background-color:white /* #364656 */;
	width: auto;

	margin-top: 0.25rem;
	margin-left: 0;
	padding: .25rem 0;
	border-radius: .25rem;
	border: 0.0625rem solid lightgray;
}

/* caret */
.onclick-menu::after {
	content: "";
	width: 0;
	height: 0.2ex;
	display: inline-block;
	margin-left: 0.33333em;

	border-top: 0.8ex solid #364656;
	border-left: 0.5ex solid transparent;
	border-right: 0.5ex solid transparent;
	border-bottom: 0 solid transparent;
}

.onclick-menu-content li {
	color: black /* #f2f5e9 */;
	list-style-type: none;
	white-space: nowrap;
}

/* style the buttons */
.onclick-menu-content button {
	background: transparent;
	border: none;
	color: inherit;
	cursor: inherit;
	outline: 0;
	cursor: pointer;
	line-height: 2em;
	padding: 0 1rem;
	font-size: .75rem;
	width: 100%;
	text-align: left;
	margin: 0;
}
/*.onclick-menu-content button:hover {
	background-color: hsl(210, 20%, 45%);
	color: #ff8c31;
}*/

/*custom menu component end*/

.actions #importJson {
	display: none;
}

/** delete button */
button.delete {
	padding: 0 0.3em;
	border: thin solid lightgray;
	background-color: inherit;
	color: gray;
}

.assumption {
	background-color: #ddeeff;
}
.assumption:focus.textInput {
	background-color: #d2e8ff;
}
.assumption:hover.textInput {
	background-color: #c7e3ff;
}
.assumption:active.textInput {
	background-color: #bddeff;
}

.syntaxProblem {
	background: rgb(255, 182, 193, 0.333);
}
.semanticsProblem {
	background: rgba(255,211,131,0.333);
}
.syntaxProblem:focus.textInput {
	background: rgb(255, 182, 193, 0.5);
  }
.semanticsProblem:focus.textInput {
	background: rgba(255,211,131,0.5);
  }
.syntaxProblem:hover.textInput {
	background: rgb(255, 182, 193, 0.667);
  }
.semanticsProblem:hover.textInput {
	background: rgba(255,211,131,0.667);
}
.syntaxProblem:active.textInput {
	background: rgb(255, 182, 193, 0.833);
}
.semanticsProblem:active.textInput {
	background: rgba(255,211,131,0.833);
}
.syntaxProblem.textInput {
	border-bottom-color: #a12;
}
.semanticsProblem.textInput {
	border-bottom-color: #c82;
}
  
.jsonImportError {
	color: #ff8c31;
	font-size: 14px;
	display: flex;
	justify-content: center;
}

.contextLoadError {
	color: #ff8c31;
	font-size: 14px;
	display: flex;
	justify-content: center;
}

.rulesHelp {
	font-size: 0.875rem;
}
.rulesHelp:after {
	content: ' ';
	display: block;
	clear: both;
	height: 0;
}

.rulesHelp .rule {
	display: inline-table;
	border-collapse: collapse;
	margin: 0.5em;
	text-align: center;
	vertical-align: baseline;
}

.rulesHelp .rule td, .rulesHelp .rule th {
	border: initial;
	padding: .125em;
}

.rulesHelp .rule td {
	border-left: .5px solid black;
}

.rulesHelp .rule td:first-child {
	border-left: none;
}

.rulesHelp .rule tr:first-child {
	border-bottom: .5px solid black;
}

.rulesHelpTable {
	border-collapse: collapse;
	width: 100%;
	box-sizing: border-box;
}

.rulesHelpTable th, td {
	text-align: center;
	padding: .25em 0px;
	border-bottom: 1px solid #ddd;
	max-width: 400px;
}

.symbols > p {
	margin: 0px;
}

.rulesHelpTable  tr:nth-child(odd){background-color: rgba(0, 0, 0, 0.05)}

.rulesHelpTable td[rowspan] { background-color: white; }

.rules-container > .rulesHelpTable tr{
	background-color: white;
}

.rulesHelpTable th {
	background-color: #6193a2;
	color: white;
	padding: 2px;
}

.rulesHelpTable .formula {
	text-align: center;
	display: inline-block;
	width: initial;
	min-width: initial;
}

.rulesHelp > summary > h2 {
	display: inline-block;
	margin: 0;
}

.half {
	width: 50%;
	float: left;
	padding: 0 0.5rem 0 0;
	box-sizing: border-box;
}

.full {
	clear: left;
	width: 100%;
	float: left;
	box-sizing: border-box;
}
.withWhiteSpace{
	white-space: pre;
}

.rules-container{
	display:flex;
	flex-wrap: wrap;
	width:100%;
	align-items: start;
}

.ruleBox{
	width:50%;
	table-layout: fixed;
}


@media only screen and (max-width: 1180px) {
	.half {
		width:100%;
		padding: 0;
	}
	.ruleBox{
		width: 100%;
	}
}

/**
 * Print style and view mode when embedded and not edited
 * Hide everything except the tableau.
 */

@media print {
	.tableauEditor .actions,
	.tableauEditor .rulesHelp,
	.onclick-menu,
	.onclick-menu-content,
	.button,
	.nodeProblems {
		display: none;
	}
	.onclick-menu.change {
		display: inline-block;
		border: none;
		padding: 0;
	}
	.onclick-menu::after {
		display: none;
	}
	.closed {
		display: inline-block;
	}
	.textInput {
		border-bottom-style: none;
	}
	.textInput.syntaxProblem,
	.textInput.semanticsProblem {
		border-bottom-style: dashed;
		border-bottom-width: 1px;
	}
	/* Print color backgrounds for webkit browsers */
	body {
		-webkit-print-color-adjust: exact;
	}
}

.viewMode .actions,
.viewMode .rulesHelp,
.viewMode .onclick-menu,
.viewMode .onclick-menu-content,
.viewMode .button,
.viewMode .nodeProblems {
	display: none;
}
.viewMode .onclick-menu.change {
	display: block;
	border: none;
	margin: 0;
	padding: 0 0.25rem;
}
.viewMode .onclick-menu::after {
	display: none;
}
.viewMode .closed {
	display: inline-block;
}
.viewMode .textInput {
	border-bottom-style: none;
}
.viewMode .textInput.syntaxProblem,
.viewMode .textInput.semanticsProblem {
	border-bottom-style: dashed;
	border-bottom-width: 1px;
}

/* vim: set sw=2 ts=2 sts=2 et : */
